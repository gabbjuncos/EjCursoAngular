para crear un nuevo proyecto

ng new nombreProyecto

pergunta 2 cosas, primera es para que sea mas estricto angular con tema de type script
que si si

segundo es el routing se le da no, para hacerlo a mano

se va a utilziar bootstrap

https://getbootstrap.com/

se agrega en el index el link

dise√±o de la pantalla html

con la clase d-flex habilita para poner elenetos uno al lado del otro

class bg-dark border-right p-3, para que sea fondo oscuro, para uqe tenga borde a la derecha

en el style.css se define algunas propeidades para el html

#sidebar estamos haciendo referencia por id del html
para que ocupe como minimo toda la pantalla
el obj del sidebar es para mantener un historial de las busquedas que se tenga

list group
y se hace un href=# para que no navegue a ningun lado

con la clase list grupo item
hace le efecto de tarjeta

__________

para crear un modulo llamado shared

ng g m shared

cero en component sidebar en la carpeta shared

ng g c shared/sidebar

luego en el modulo shared tengo que exportar el componente sidebar compoenten
agrego 

exports:[
    SidebarComponent
  ],

y en el app moduel solo importo en modulo sharedModule y no el sidebar component

__________

ahora se va a separadr la logica de los gifts en un modulo aparte
ng g m gifts

y agregarlo al module app

ahora se crear el component gifsPage en la carpeta gifs

y ahora se llama al componente gifs en el moduel
y en el module se lo exporta

ahora en el html del app componente se va a llamar a lo correspondiente al container
y se envia esas linea html al html correspondiente al modulo gifspage

la clase mas general del html el container se la puede asiganar en el html app component

_________

ahora puedo pensar lo que es la busqueda como otro componente
y lo que es resultado en otro componente


creo componente asociado a la busqueda
con las 2 opciones agregas no crea el archivo para prueba ni para el estilo independiente
ng g c gifs/busqueda --skipTests -is

y para los resultados

ng g c gifs/resultados --skipTests -is

en este caso no hace falta exportar los componentes ya que no hace falta
usar los componentes busqueda y resutldo fuera del component gifs

__________

para recibir lo que se escribe en el buscador 
pasamos como parametos el $event y en la definicion de la funcion tambien tiene que estar

podemos hacer una referencia local en el html #txtBuscar


utilizar decorador @ViewChild para ver que en este caso se pueda
recibir lo que se escribe en el buscador

y colocamos en parentesis el argumento de que quiero, puede
se por type, por class del html

y poniendo el console para mostrar el txtBuscar del html
muestra el native element el txtbuscar y podemos ver el tipo para ponerlo
en la funcion

el txtBuscar sale como error porque aun cuando el #txtBsucar del html 
este siempre, pero valer null

pero si le aggreog en el ts el ! le estoy diciendo que siempre va a estar
ese elemento, o algo asi es la explicacion txtBuscar!

ese operacodr es para asegurarse de que ese obj no va a ser null

documentacion para ver el operador este !
typescript non null assertion operator

y para poder decirle el tipo que es para que tenga otdos los metodos input
tengo que decir al ElementRef<HTMLInputElement> su tipo
porque por defecto es del tipo any y no va a tener todos los metodos input

ahora en el buscador, se escribe y si se presiona enter se borra
el contenido y lo muestra

de esta forma se usa el viewchild
_____________

para crear un servicio y que no cree el archivo de pruebas

ng g s gifs/services/gifs --skipTests

el providedIn: root
que se agrega al service es para que se creen los servicios cuando se 
crea el bundle

significa que no importa donde este, este servicio va a ser unico y va a 
estar creado y no tengo que especificarlo en el module, en los providers
al estar en root va a ser global

en le metodo historial
se rompe la referencia con el operador spred ...this._historial
porque puede ser que se modifique ese array _hisorial por eso se rompe

luego para utilizar el metodo
hay que inyectarlo, agregandolo como parametro al constructor del componente
donde quiero usar el servicio busqueda ts

ahora hay conusmir desde el servicio, el arreglo con el historial

desde el componente sidebar se define un metodo getsidebar para consumir el servicio
y mostrarlo en el html de sidebar con un ngfor llamando al historial

EN EL SERVICE SE CONTROLA QUE NO SI INGRESE LO MISMO PERO EN MINUSCULA O MAYUSCULA
Y NO SEAN CON ESPACIOS EN BLANCOS

para que se muestre capitalizado, se usa pipe | en el html correspondiente
los pipes solo lo manipulan en forma visual en el template, pero no hacen
modifiaciones a la data

el pipe va en el html

el capitalizar  con titlecase es para que a la palabras las muestre empezando con mayuscula

____________________

TRAER LAS IMAGENES DESDE LA PAGINA 
developers.giphy.com por medio de su api

en el service seria mejor almacenar el api key

para probar la api usamos postman
para probasr servicios rest

http://api.giphy.com/v1/gifs/search  + ?api_key=  +  "la cadena api" 

http://api.giphy.com/v1/gifs/search?api_key=sSfKcYCTU2qKwmqgg83ECg7echhFah9e

y contesta con 200 OK

http://api.giphy.com/v1/gifs/search  + ?api_key=  +  "la cadena api" + 
y por post man le podemos dar los parametros
en value esscrimos y nos va armando la url
le ponemos un nombre al parametro que es lo mismo de la doc de la api
y en value su valor 

http://api.giphy.com/v1/gifs/search?api_key=sSfKcYCTU2qKwmqgg83ECg7echhFah9e&q=dragon ball z

otro parametro el limit se agrega en la columna query y el valor que quiero
para darle un limite de 10

https://giphy.com/gifs/TOEIAnimationUK-dbz-dragon-ball-z-GRSnxyhJnPsaQy9YLn?limit=10

vamos a usar el obj que trae angular para hacer la conexxion http

imporatmos el modulo en el app.moduel para que este de manera global
si tiene la palabra modulo lo que importamos, vamos a importarlo en 
imports
import {HttpClientModule} from '@angular/common/http'

ahora en el service vamos a inyectarlo como parametro del contructor

como obj del tipo httpClient

con esa inyecion ya se puede hacer prticiones, http , post put delete get
con la diferencia de que va a trabajar en base a observables, son mas
poderosos que las promesas 

con http.get y pasamos la url
y en vez del then, se ejecuta el suscribe, es parecido
el suscribe se va a ejecutar cuando tengamos respuesta

el modulo http nos ofrece varias cosas por eso no usa

https://developers.giphy.com/docs/api/endpoint#search

____________________

usar back ticks ``
para armar la url
http://api.giphy.com/v1/gifs/search?api_key=sSfKcYCTU2qKwmqgg83ECg7echhFah9e&q=dragon ball z&limit=10

entre parentesis re reemplaa por el contenido para que lo tome
${query}

y el contenido se lo almacena en un arreglo public porque no importa
quien acceso

la propiedad resultados tiene los ultimos 10 valores
y se los pasa al componente resultados

se inyecta en el componente resultados el servicio,  ingresandolo en el 
constructor

se podria poner publico en el constructor de resultados y acceder por el html
con la referencia del parametro

y el en html de resultaods
se hace un ngFor para llamarlo

lo que muestra se ve todas la propiedades que tiene 

para mostrar la imagen es la propiedad imagene downsized_medium y su url
al no tener tipado tengo que asegurarme que ese tipado venga

se obtiene la url y luego se la pasa como parametro a la etiqueta
html img

y si quiero el valor producto de la url osea la busqueda
tengo que indicarlo con corchetes [src]

el alt seria para que vea otra cosa en caso que no pueda ver la imagen

class ="card-img-top"
es una clase de bootstrap para mostrar imagenes

falta reemplzar los any del service por el tipado correspondiente
por que no se tiene los metodos con la ayuda
y es dificil saber que tipo venia antes
siempre usar tipado

____________________

a partir del json de la consulta con postman podemos ir a la pagina 
quicktype.io

pegar la respuesta postman del lado izquierdo, darle un nombre, typo jason
del lado derecho en opcion y elegir typescript, copiar ese codig, trasnforma
el json en type script, se copia y pega completamente toda la respues json

y creamos una carpeta interface para pegarlo ahi 
y creamosel archivo gifs.interface.ts

y nos genera todas las interfaces necesarias

en el archicho gfs.inteface

entonces ahora en el service gifs se puede poner el tipo SearchGifResponse
y lo recomendable es poner el tipo en el get<SearchGifsResponse>
y lo que decimos es la respuesta del get luce como esta interfaz

y ahora cuando escribamos resp. vamos a tener los metodos 
la paginacion, data, etc , ahora no necesito saberme esa inforamcion de antemano

resp.data[0].images.downsized_medium.url
tambien en service podemos cambiar el tipo
en el arreglo resultados podemos decir que es un arreglo del tipo Gif

que vendria a ser la data que trae la consulta get

y las propiedades que llamos desde el html al gifs no ahce falta memorizalo
ya me va ayudando el intelinge

_____________

para guardar en el local storage

y como no guarda objetos, puedo guardarlos en json pasandolos a string los historiales
localStorage.setItem('historial',JSON.stringify(this._historial))
hasta aca lo tendria almacenado en el local historage pero no lo muestra
en el sidebar

como los servicios se ejecutan como singletosn se ejecutan una vez
y en constructor del servicio

se hace lo inverso al stringify para convertir el obj a string
esto lo pasa a json , para que no de error y se le pone le ! 
para que no se ponga estricto type script

como el ._historial = JSON.parse( local.Storage.getItem('historial')! )

otra forma
this._historial = JSON.parse(localStorage.getItem('historial')!);

y se puede borrar desde el navegador el local storage

guardamos los resultados en el local storage de la ultima busqueda

localStorage.setItem('resultados',JSON.stringify(this.resultados));

y para mostrar las imagenes del ultimo resutlado de busqueda
siempre
en el constructor del service 
se lo muestra 

_____________________________________

LO QUE QUIERO HACER AHORA ES cuando se hace click en alguna de las opciones
del historial se escriba en el buscador y volver a hacer esa busqueda

se llama el metodo dsede service 
pero en sidebar pasandole como parametro el item
en el gtml sidebar

________________________

MEJORAR LA URL endpoint
ya que si quisiera cambiar el limite de gifs a consultar seria complicado
por ejemplo


la idesa seria crear la url como sale en postman
osea con el key y los valores

importar HttpParams me va a permitir crear los parametros como lo hace 
post man

ver que va el parametor y luego el valor

toda la primera parte de la url podria ser una base porque seria todo igual
cuando quiera llamar a esa api 

servicioUrl

y luego se construiria toda esa url

base + endpoint que quiero llamar que seria el search
y mandamos los valores de params

this.http.get<SearchGifsResponse>(`${this.servicioUrl}/search`,{params:params})

___________

PARA DARLE UN POCO DE ANIMACION CUANDO APARECEN LAS IMAGENES DESPUES DE UNA 
BUSQUEDA

animate.style


cdn es para enlace por distribucion de contendio 
pegando el link

luego en el html component se colocaca la clase
en el ngfor como clase lo coloca

cambiando el bound por el fadeIn

y se le puede concatenear otras animaciones

trae varias para ver en la pagina





